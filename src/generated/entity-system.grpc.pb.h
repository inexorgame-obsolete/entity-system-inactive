// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: entity-system.proto
#ifndef GRPC_entity_2dsystem_2eproto__INCLUDED
#define GRPC_entity_2dsystem_2eproto__INCLUDED

#include "entity-system.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace inexor {
namespace entity_system {

class EntityService final {
 public:
  static constexpr char const* service_full_name() {
    return "inexor.entity_system.EntityService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Create an entity
    virtual ::grpc::Status CreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncCreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncCreateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncCreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncCreateEntityRaw(context, request, cq));
    }
    // / List all entities
    std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Entity>> ListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Entity>>(ListEntitiesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>> AsyncListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>>(AsyncListEntitiesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>> PrepareAsyncListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>>(PrepareAsyncListEntitiesRaw(context, request, cq));
    }
    // / Delete entity
    virtual ::grpc::Status DeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncDeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncDeleteEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncDeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteEntityRaw(context, request, cq));
    }
    // / Create an attribute
    virtual ::grpc::Status CreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncCreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncCreateAttributeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncCreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncCreateAttributeRaw(context, request, cq));
    }
    // / List all attributes
    std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Attribute>> ListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Attribute>>(ListAttributesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>> AsyncListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>>(AsyncListAttributesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>> PrepareAsyncListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>>(PrepareAsyncListAttributesRaw(context, request, cq));
    }
    // / Delete an attribute
    virtual ::grpc::Status DeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncDeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncDeleteAttributeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncDeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteAttributeRaw(context, request, cq));
    }
    // / Create a relation
    virtual ::grpc::Status CreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncCreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncCreateRelationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncCreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncCreateRelationRaw(context, request, cq));
    }
    // / List relations
    std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Relation>> ListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::inexor::entity_system::Relation>>(ListRelationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>> AsyncListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>>(AsyncListRelationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>> PrepareAsyncListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>>(PrepareAsyncListRelationsRaw(context, request, cq));
    }
    // / Delete relations
    virtual ::grpc::Status DeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::inexor::entity_system::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> AsyncDeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(AsyncDeleteRelationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>> PrepareAsyncDeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteRelationRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // / Create an entity
      virtual void CreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
      // / List all entities
      // / Delete entity
      virtual void DeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
      // / Create an attribute
      virtual void CreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
      // / List all attributes
      // / Delete an attribute
      virtual void DeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
      // / Create a relation
      virtual void CreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
      // / List relations
      // / Delete relations
      virtual void DeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncCreateEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncCreateEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::inexor::entity_system::Entity>* ListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>* AsyncListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Entity>* PrepareAsyncListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncCreateAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncCreateAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::inexor::entity_system::Attribute>* ListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>* AsyncListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Attribute>* PrepareAsyncListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncDeleteAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncDeleteAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncCreateRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncCreateRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::inexor::entity_system::Relation>* ListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>* AsyncListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::inexor::entity_system::Relation>* PrepareAsyncListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* AsyncDeleteRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::Operation>* PrepareAsyncDeleteRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncCreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncCreateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncCreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncCreateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Entity>> ListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Entity>>(ListEntitiesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>> AsyncListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>>(AsyncListEntitiesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>> PrepareAsyncListEntities(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>>(PrepareAsyncListEntitiesRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncDeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncDeleteEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncDeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteEntityRaw(context, request, cq));
    }
    ::grpc::Status CreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncCreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncCreateAttributeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncCreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncCreateAttributeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Attribute>> ListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Attribute>>(ListAttributesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>> AsyncListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>>(AsyncListAttributesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>> PrepareAsyncListAttributes(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>>(PrepareAsyncListAttributesRaw(context, request, cq));
    }
    ::grpc::Status DeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncDeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncDeleteAttributeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncDeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteAttributeRaw(context, request, cq));
    }
    ::grpc::Status CreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncCreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncCreateRelationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncCreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncCreateRelationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Relation>> ListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::inexor::entity_system::Relation>>(ListRelationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>> AsyncListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>>(AsyncListRelationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>> PrepareAsyncListRelations(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>>(PrepareAsyncListRelationsRaw(context, request, cq));
    }
    ::grpc::Status DeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::inexor::entity_system::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> AsyncDeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(AsyncDeleteRelationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>> PrepareAsyncDeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>>(PrepareAsyncDeleteRelationRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntity(::grpc::ClientContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
      void CreateAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
      void DeleteAttribute(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
      void CreateRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
      void DeleteRelation(::grpc::ClientContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncCreateEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncCreateEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::inexor::entity_system::Entity>* ListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>* AsyncListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Entity>* PrepareAsyncListEntitiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Entity& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncCreateAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncCreateAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::inexor::entity_system::Attribute>* ListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>* AsyncListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Attribute>* PrepareAsyncListAttributesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncDeleteAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncDeleteAttributeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Attribute& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncCreateRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncCreateRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::inexor::entity_system::Relation>* ListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>* AsyncListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::inexor::entity_system::Relation>* PrepareAsyncListRelationsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* AsyncDeleteRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::Operation>* PrepareAsyncDeleteRelationRaw(::grpc::ClientContext* context, const ::inexor::entity_system::Relation& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_ListEntities_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateAttribute_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAttributes_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteAttribute_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRelation_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRelations_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRelation_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Create an entity
    virtual ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response);
    // / List all entities
    virtual ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer);
    // / Delete entity
    virtual ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response);
    // / Create an attribute
    virtual ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response);
    // / List all attributes
    virtual ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer);
    // / Delete an attribute
    virtual ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response);
    // / Create a relation
    virtual ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response);
    // / List relations
    virtual ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer);
    // / Delete relations
    virtual ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateEntity() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntity(::grpc::ServerContext* context, ::inexor::entity_system::Entity* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListEntities() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntities(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::inexor::entity_system::Entity>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntity(::grpc::ServerContext* context, ::inexor::entity_system::Entity* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateAttribute() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAttribute(::grpc::ServerContext* context, ::inexor::entity_system::Attribute* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListAttributes() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAttributes(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::inexor::entity_system::Attribute>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteAttribute() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAttribute(::grpc::ServerContext* context, ::inexor::entity_system::Attribute* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateRelation() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelation(::grpc::ServerContext* context, ::inexor::entity_system::Relation* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListRelations() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelations(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::inexor::entity_system::Relation>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteRelation() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRelation(::grpc::ServerContext* context, ::inexor::entity_system::Relation* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateEntity<WithAsyncMethod_ListEntities<WithAsyncMethod_DeleteEntity<WithAsyncMethod_CreateAttribute<WithAsyncMethod_ListAttributes<WithAsyncMethod_DeleteAttribute<WithAsyncMethod_CreateRelation<WithAsyncMethod_ListRelations<WithAsyncMethod_DeleteRelation<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateEntity() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateEntity<BaseClass>, ::inexor::entity_system::Entity, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Entity* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntity(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_ListEntities() {
    }
    ~ExperimentalWithCallbackMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteEntity() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteEntity<BaseClass>, ::inexor::entity_system::Entity, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Entity* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntity(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateAttribute() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateAttribute<BaseClass>, ::inexor::entity_system::Attribute, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Attribute* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateAttribute(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_ListAttributes() {
    }
    ~ExperimentalWithCallbackMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteAttribute() {
      ::grpc::Service::experimental().MarkMethodCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteAttribute<BaseClass>, ::inexor::entity_system::Attribute, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Attribute* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteAttribute(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateRelation() {
      ::grpc::Service::experimental().MarkMethodCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateRelation<BaseClass>, ::inexor::entity_system::Relation, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Relation* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateRelation(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_ListRelations() {
    }
    ~ExperimentalWithCallbackMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteRelation() {
      ::grpc::Service::experimental().MarkMethodCallback(8,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteRelation<BaseClass>, ::inexor::entity_system::Relation, ::inexor::entity_system::Operation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::Relation* request,
                 ::inexor::entity_system::Operation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteRelation(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_CreateEntity<ExperimentalWithCallbackMethod_ListEntities<ExperimentalWithCallbackMethod_DeleteEntity<ExperimentalWithCallbackMethod_CreateAttribute<ExperimentalWithCallbackMethod_ListAttributes<ExperimentalWithCallbackMethod_DeleteAttribute<ExperimentalWithCallbackMethod_CreateRelation<ExperimentalWithCallbackMethod_ListRelations<ExperimentalWithCallbackMethod_DeleteRelation<Service > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateEntity() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListEntities() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateAttribute() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListAttributes() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteAttribute() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateRelation() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListRelations() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteRelation() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateEntity() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListEntities() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntities(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateAttribute() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateAttribute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListAttributes() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAttributes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteAttribute() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteAttribute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateRelation() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRelation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ListRelations() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRelations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteRelation() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRelation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateEntity() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateEntity<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntity(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntity(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_ListEntities() {
    }
    ~ExperimentalWithRawCallbackMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteEntity() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteEntity<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntity(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntity(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateAttribute() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateAttribute<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateAttribute(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateAttribute(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_ListAttributes() {
    }
    ~ExperimentalWithRawCallbackMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteAttribute() {
      ::grpc::Service::experimental().MarkMethodRawCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteAttribute<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteAttribute(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteAttribute(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateRelation() {
      ::grpc::Service::experimental().MarkMethodRawCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateRelation<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateRelation(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateRelation(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_ListRelations() {
    }
    ~ExperimentalWithRawCallbackMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteRelation() {
      ::grpc::Service::experimental().MarkMethodRawCallback(8,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteRelation<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteRelation(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteRelation(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateEntity() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Entity, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_CreateEntity<BaseClass>::StreamedCreateEntity, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Entity,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Entity, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_DeleteEntity<BaseClass>::StreamedDeleteEntity, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::inexor::entity_system::Entity* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Entity,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateAttribute() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Attribute, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_CreateAttribute<BaseClass>::StreamedCreateAttribute, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateAttribute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Attribute,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteAttribute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteAttribute() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Attribute, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_DeleteAttribute<BaseClass>::StreamedDeleteAttribute, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteAttribute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteAttribute(::grpc::ServerContext* context, const ::inexor::entity_system::Attribute* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteAttribute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Attribute,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateRelation() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Relation, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_CreateRelation<BaseClass>::StreamedCreateRelation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRelation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Relation,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRelation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteRelation() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::Relation, ::inexor::entity_system::Operation>(std::bind(&WithStreamedUnaryMethod_DeleteRelation<BaseClass>::StreamedDeleteRelation, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteRelation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRelation(::grpc::ServerContext* context, const ::inexor::entity_system::Relation* request, ::inexor::entity_system::Operation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRelation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::Relation,::inexor::entity_system::Operation>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateEntity<WithStreamedUnaryMethod_DeleteEntity<WithStreamedUnaryMethod_CreateAttribute<WithStreamedUnaryMethod_DeleteAttribute<WithStreamedUnaryMethod_CreateRelation<WithStreamedUnaryMethod_DeleteRelation<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_ListEntities() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler< ::google::protobuf::Empty, ::inexor::entity_system::Entity>(std::bind(&WithSplitStreamingMethod_ListEntities<BaseClass>::StreamedListEntities, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Entity>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListEntities(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::inexor::entity_system::Entity>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_ListAttributes() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler< ::google::protobuf::Empty, ::inexor::entity_system::Attribute>(std::bind(&WithSplitStreamingMethod_ListAttributes<BaseClass>::StreamedListAttributes, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_ListAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAttributes(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Attribute>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListAttributes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::inexor::entity_system::Attribute>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_ListRelations() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::SplitServerStreamingHandler< ::google::protobuf::Empty, ::inexor::entity_system::Relation>(std::bind(&WithSplitStreamingMethod_ListRelations<BaseClass>::StreamedListRelations, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_ListRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRelations(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::inexor::entity_system::Relation>* writer) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListRelations(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::inexor::entity_system::Relation>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListEntities<WithSplitStreamingMethod_ListAttributes<WithSplitStreamingMethod_ListRelations<Service > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateEntity<WithSplitStreamingMethod_ListEntities<WithStreamedUnaryMethod_DeleteEntity<WithStreamedUnaryMethod_CreateAttribute<WithSplitStreamingMethod_ListAttributes<WithStreamedUnaryMethod_DeleteAttribute<WithStreamedUnaryMethod_CreateRelation<WithSplitStreamingMethod_ListRelations<WithStreamedUnaryMethod_DeleteRelation<Service > > > > > > > > > StreamedService;
};

}  // namespace entity_system
}  // namespace inexor


#endif  // GRPC_entity_2dsystem_2eproto__INCLUDED
