// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: entity-system.proto
#ifndef GRPC_entity_2dsystem_2eproto__INCLUDED
#define GRPC_entity_2dsystem_2eproto__INCLUDED

#include "entity-system.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace inexor {
namespace entity_system {

class EntitySystem final {
 public:
  static constexpr char const* service_full_name() {
    return "inexor.entity_system.EntitySystem";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create an entity type
    virtual ::grpc::Status CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityTypeRaw(context, request, cq));
    }
    // Delete entity type
    virtual ::grpc::Status DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityTypeRaw(context, request, cq));
    }
    // Create an entity attribute type
    virtual ::grpc::Status CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityAttributeTypeRaw(context, request, cq));
    }
    // Delete entity attribute type
    virtual ::grpc::Status DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityAttributeTypeRaw(context, request, cq));
    }
    // Create an entity relation attribution type
    virtual ::grpc::Status CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityRelationAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityRelationAttributeTypeRaw(context, request, cq));
    }
    // Delete an entity relation attribute type
    virtual ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityRelationAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityRelationAttributeTypeRaw(context, request, cq));
    }
    // Create an entity relation type
    virtual ::grpc::Status CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityRelationTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityRelationTypeRaw(context, request, cq));
    }
    // Delete an entity relation type
    virtual ::grpc::Status DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityRelationTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityRelationTypeRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Create an entity type
      virtual void CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Delete entity type
      virtual void DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Create an entity attribute type
      virtual void CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Delete entity attribute type
      virtual void DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Create an entity relation attribution type
      virtual void CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Delete an entity relation attribute type
      virtual void DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Create an entity relation type
      virtual void CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
      // Delete an entity relation type
      virtual void DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityTypeRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityTypeRaw(context, request, cq));
    }
    ::grpc::Status CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityAttributeTypeRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityAttributeTypeRaw(context, request, cq));
    }
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityRelationAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityRelationAttributeTypeRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityRelationAttributeTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityRelationAttributeTypeRaw(context, request, cq));
    }
    ::grpc::Status CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncCreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncCreateEntityRelationTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncCreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncCreateEntityRelationTypeRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> AsyncDeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(AsyncDeleteEntityRelationTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>> PrepareAsyncDeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>>(PrepareAsyncDeleteEntityRelationTypeRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* AsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* PrepareAsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntityType_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntityType_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntityAttributeType_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntityAttributeType_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntityRelationAttributeType_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntityRelationAttributeType_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntityRelationType_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntityRelationType_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create an entity type
    virtual ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response);
    // Delete entity type
    virtual ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response);
    // Create an entity attribute type
    virtual ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response);
    // Delete entity attribute type
    virtual ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response);
    // Create an entity relation attribution type
    virtual ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response);
    // Delete an entity relation attribute type
    virtual ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response);
    // Create an entity relation type
    virtual ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response);
    // Delete an entity relation type
    virtual ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateEntityType() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityType(::grpc::ServerContext* context, ::inexor::entity_system::EntityType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteEntityType() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityType(::grpc::ServerContext* context, ::inexor::entity_system::EntityType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateEntityAttributeType() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityAttributeType(::grpc::ServerContext* context, ::inexor::entity_system::EntityAttributeType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteEntityAttributeType() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityAttributeType(::grpc::ServerContext* context, ::inexor::entity_system::EntityAttributeType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityRelationAttributeType(::grpc::ServerContext* context, ::inexor::entity_system::EntityRelationAttributeType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityRelationAttributeType(::grpc::ServerContext* context, ::inexor::entity_system::EntityRelationAttributeType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateEntityRelationType() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityRelationType(::grpc::ServerContext* context, ::inexor::entity_system::EntityRelationType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteEntityRelationType() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityRelationType(::grpc::ServerContext* context, ::inexor::entity_system::EntityRelationType* request, ::grpc::ServerAsyncResponseWriter< ::inexor::entity_system::EntityOperation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateEntityType<WithAsyncMethod_DeleteEntityType<WithAsyncMethod_CreateEntityAttributeType<WithAsyncMethod_DeleteEntityAttributeType<WithAsyncMethod_CreateEntityRelationAttributeType<WithAsyncMethod_DeleteEntityRelationAttributeType<WithAsyncMethod_CreateEntityRelationType<WithAsyncMethod_DeleteEntityRelationType<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateEntityType() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateEntityType<BaseClass>, ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteEntityType() {
      ::grpc::Service::experimental().MarkMethodCallback(1,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteEntityType<BaseClass>, ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateEntityAttributeType() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateEntityAttributeType<BaseClass>, ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityAttributeType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteEntityAttributeType() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteEntityAttributeType<BaseClass>, ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityAttributeType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::experimental().MarkMethodCallback(4,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateEntityRelationAttributeType<BaseClass>, ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityRelationAttributeType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityRelationAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::experimental().MarkMethodCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteEntityRelationAttributeType<BaseClass>, ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityRelationAttributeType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityRelationAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_CreateEntityRelationType() {
      ::grpc::Service::experimental().MarkMethodCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_CreateEntityRelationType<BaseClass>, ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityRelationType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityRelationType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_DeleteEntityRelationType() {
      ::grpc::Service::experimental().MarkMethodCallback(7,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithCallbackMethod_DeleteEntityRelationType<BaseClass>, ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(
          [this](::grpc::ServerContext* context,
                 const ::inexor::entity_system::EntityRelationType* request,
                 ::inexor::entity_system::EntityOperation* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityRelationType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithCallbackMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_CreateEntityType<ExperimentalWithCallbackMethod_DeleteEntityType<ExperimentalWithCallbackMethod_CreateEntityAttributeType<ExperimentalWithCallbackMethod_DeleteEntityAttributeType<ExperimentalWithCallbackMethod_CreateEntityRelationAttributeType<ExperimentalWithCallbackMethod_DeleteEntityRelationAttributeType<ExperimentalWithCallbackMethod_CreateEntityRelationType<ExperimentalWithCallbackMethod_DeleteEntityRelationType<Service > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateEntityType() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteEntityType() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateEntityAttributeType() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteEntityAttributeType() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateEntityRelationType() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteEntityRelationType() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateEntityType() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteEntityType() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateEntityAttributeType() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityAttributeType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteEntityAttributeType() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityAttributeType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityRelationAttributeType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityRelationAttributeType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_CreateEntityRelationType() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntityRelationType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_DeleteEntityRelationType() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntityRelationType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateEntityType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateEntityType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteEntityType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(1,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteEntityType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateEntityAttributeType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateEntityAttributeType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityAttributeType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteEntityAttributeType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteEntityAttributeType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityAttributeType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(4,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateEntityRelationAttributeType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityRelationAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(5,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteEntityRelationAttributeType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityRelationAttributeType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateEntityRelationType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(6,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_CreateEntityRelationType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->CreateEntityRelationType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void CreateEntityRelationType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteEntityRelationType() {
      ::grpc::Service::experimental().MarkMethodRawCallback(7,
        new ::grpc::internal::CallbackUnaryHandler< ExperimentalWithRawCallbackMethod_DeleteEntityRelationType<BaseClass>, ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->DeleteEntityRelationType(context, request, response, controller);
                 }, this));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void DeleteEntityRelationType(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateEntityType() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_CreateEntityType<BaseClass>::StreamedCreateEntityType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntityType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteEntityType() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_DeleteEntityType<BaseClass>::StreamedDeleteEntityType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteEntityType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntityType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateEntityAttributeType() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_CreateEntityAttributeType<BaseClass>::StreamedCreateEntityAttributeType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntityAttributeType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityAttributeType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntityAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteEntityAttributeType() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_DeleteEntityAttributeType<BaseClass>::StreamedDeleteEntityAttributeType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteEntityAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntityAttributeType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityAttributeType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_CreateEntityRelationAttributeType<BaseClass>::StreamedCreateEntityRelationAttributeType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntityRelationAttributeType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityRelationAttributeType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntityRelationAttributeType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteEntityRelationAttributeType() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_DeleteEntityRelationAttributeType<BaseClass>::StreamedDeleteEntityRelationAttributeType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteEntityRelationAttributeType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntityRelationAttributeType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityRelationAttributeType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateEntityRelationType() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_CreateEntityRelationType<BaseClass>::StreamedCreateEntityRelationType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntityRelationType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityRelationType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntityRelationType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteEntityRelationType() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(std::bind(&WithStreamedUnaryMethod_DeleteEntityRelationType<BaseClass>::StreamedDeleteEntityRelationType, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteEntityRelationType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntityRelationType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::inexor::entity_system::EntityRelationType,::inexor::entity_system::EntityOperation>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateEntityType<WithStreamedUnaryMethod_DeleteEntityType<WithStreamedUnaryMethod_CreateEntityAttributeType<WithStreamedUnaryMethod_DeleteEntityAttributeType<WithStreamedUnaryMethod_CreateEntityRelationAttributeType<WithStreamedUnaryMethod_DeleteEntityRelationAttributeType<WithStreamedUnaryMethod_CreateEntityRelationType<WithStreamedUnaryMethod_DeleteEntityRelationType<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateEntityType<WithStreamedUnaryMethod_DeleteEntityType<WithStreamedUnaryMethod_CreateEntityAttributeType<WithStreamedUnaryMethod_DeleteEntityAttributeType<WithStreamedUnaryMethod_CreateEntityRelationAttributeType<WithStreamedUnaryMethod_DeleteEntityRelationAttributeType<WithStreamedUnaryMethod_CreateEntityRelationType<WithStreamedUnaryMethod_DeleteEntityRelationType<Service > > > > > > > > StreamedService;
};

}  // namespace entity_system
}  // namespace inexor


#endif  // GRPC_entity_2dsystem_2eproto__INCLUDED
