// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: entity-system.proto

#include "entity-system.pb.h"
#include "entity-system.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace inexor {
namespace entity_system {

static const char* EntitySystem_method_names[] = {
  "/inexor.entity_system.EntitySystem/CreateEntityType",
  "/inexor.entity_system.EntitySystem/DeleteEntityType",
  "/inexor.entity_system.EntitySystem/CreateEntityAttributeType",
  "/inexor.entity_system.EntitySystem/DeleteEntityAttributeType",
  "/inexor.entity_system.EntitySystem/CreateEntityRelationAttributeType",
  "/inexor.entity_system.EntitySystem/DeleteEntityRelationAttributeType",
  "/inexor.entity_system.EntitySystem/CreateEntityRelationType",
  "/inexor.entity_system.EntitySystem/DeleteEntityRelationType",
};

std::unique_ptr< EntitySystem::Stub> EntitySystem::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< EntitySystem::Stub> stub(new EntitySystem::Stub(channel));
  return stub;
}

EntitySystem::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateEntityType_(EntitySystem_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEntityType_(EntitySystem_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateEntityAttributeType_(EntitySystem_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEntityAttributeType_(EntitySystem_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateEntityRelationAttributeType_(EntitySystem_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEntityRelationAttributeType_(EntitySystem_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateEntityRelationType_(EntitySystem_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEntityRelationType_(EntitySystem_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status EntitySystem::Stub::CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateEntityType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::CreateEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateEntityType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncCreateEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteEntityType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::DeleteEntityType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteEntityType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncDeleteEntityTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateEntityAttributeType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::CreateEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateEntityAttributeType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityAttributeType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncCreateEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityAttributeType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteEntityAttributeType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::DeleteEntityAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteEntityAttributeType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityAttributeType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncDeleteEntityAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityAttributeType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateEntityRelationAttributeType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::CreateEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateEntityRelationAttributeType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityRelationAttributeType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncCreateEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityRelationAttributeType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteEntityRelationAttributeType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::DeleteEntityRelationAttributeType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteEntityRelationAttributeType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityRelationAttributeType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncDeleteEntityRelationAttributeTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationAttributeType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityRelationAttributeType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateEntityRelationType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::CreateEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateEntityRelationType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityRelationType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncCreateEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_CreateEntityRelationType_, context, request, false);
}

::grpc::Status EntitySystem::Stub::DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::inexor::entity_system::EntityOperation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteEntityRelationType_, context, request, response);
}

void EntitySystem::Stub::experimental_async::DeleteEntityRelationType(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteEntityRelationType_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::AsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityRelationType_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::inexor::entity_system::EntityOperation>* EntitySystem::Stub::PrepareAsyncDeleteEntityRelationTypeRaw(::grpc::ClientContext* context, const ::inexor::entity_system::EntityRelationType& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::inexor::entity_system::EntityOperation>::Create(channel_.get(), cq, rpcmethod_DeleteEntityRelationType_, context, request, false);
}

EntitySystem::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::CreateEntityType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::DeleteEntityType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::CreateEntityAttributeType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityAttributeType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::DeleteEntityAttributeType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::CreateEntityRelationAttributeType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityRelationAttributeType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::DeleteEntityRelationAttributeType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::CreateEntityRelationType), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EntitySystem_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EntitySystem::Service, ::inexor::entity_system::EntityRelationType, ::inexor::entity_system::EntityOperation>(
          std::mem_fn(&EntitySystem::Service::DeleteEntityRelationType), this)));
}

EntitySystem::Service::~Service() {
}

::grpc::Status EntitySystem::Service::CreateEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::DeleteEntityType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::CreateEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::DeleteEntityAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityAttributeType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::CreateEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::DeleteEntityRelationAttributeType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationAttributeType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::CreateEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EntitySystem::Service::DeleteEntityRelationType(::grpc::ServerContext* context, const ::inexor::entity_system::EntityRelationType* request, ::inexor::entity_system::EntityOperation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace inexor
}  // namespace entity_system

