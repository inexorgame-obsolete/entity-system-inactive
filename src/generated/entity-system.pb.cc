// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity-system.proto

#include "entity-system.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_entity_2dsystem_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_entity_2dsystem_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EntityType;
}  // namespace protobuf_entity_2dsystem_2eproto
namespace inexor {
namespace entity_system {
class EntityAttributeTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityAttributeType>
      _instance;
} _EntityAttributeType_default_instance_;
class EntityTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityType>
      _instance;
} _EntityType_default_instance_;
class EntityRelationAttributeTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityRelationAttributeType>
      _instance;
} _EntityRelationAttributeType_default_instance_;
class EntityRelationTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityRelationType>
      _instance;
} _EntityRelationType_default_instance_;
class EntityOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityOperation>
      _instance;
} _EntityOperation_default_instance_;
}  // namespace entity_system
}  // namespace inexor
namespace protobuf_entity_2dsystem_2eproto {
static void InitDefaultsEntityAttributeType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inexor::entity_system::_EntityAttributeType_default_instance_;
    new (ptr) ::inexor::entity_system::EntityAttributeType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inexor::entity_system::EntityAttributeType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityAttributeType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityAttributeType}, {}};

static void InitDefaultsEntityType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inexor::entity_system::_EntityType_default_instance_;
    new (ptr) ::inexor::entity_system::EntityType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inexor::entity_system::EntityType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityType}, {}};

static void InitDefaultsEntityRelationAttributeType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inexor::entity_system::_EntityRelationAttributeType_default_instance_;
    new (ptr) ::inexor::entity_system::EntityRelationAttributeType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inexor::entity_system::EntityRelationAttributeType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityRelationAttributeType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityRelationAttributeType}, {}};

static void InitDefaultsEntityRelationType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inexor::entity_system::_EntityRelationType_default_instance_;
    new (ptr) ::inexor::entity_system::EntityRelationType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inexor::entity_system::EntityRelationType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EntityRelationType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEntityRelationType}, {
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityType.base,}};

static void InitDefaultsEntityOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inexor::entity_system::_EntityOperation_default_instance_;
    new (ptr) ::inexor::entity_system::EntityOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inexor::entity_system::EntityOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityOperation}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_EntityAttributeType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityRelationAttributeType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityRelationType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityOperation.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityAttributeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityAttributeType, ent_attr_type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityAttributeType, ent_attr_data_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityType, ent_type_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationAttributeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationAttributeType, ent_rel_attr_type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationAttributeType, ent_rel_attr_type_data_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationType, rel_type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationType, ent_type_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityRelationType, ent_type_target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inexor::entity_system::EntityOperation, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::inexor::entity_system::EntityAttributeType)},
  { 7, -1, sizeof(::inexor::entity_system::EntityType)},
  { 13, -1, sizeof(::inexor::entity_system::EntityRelationAttributeType)},
  { 20, -1, sizeof(::inexor::entity_system::EntityRelationType)},
  { 28, -1, sizeof(::inexor::entity_system::EntityOperation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::inexor::entity_system::_EntityAttributeType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inexor::entity_system::_EntityType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inexor::entity_system::_EntityRelationAttributeType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inexor::entity_system::_EntityRelationType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inexor::entity_system::_EntityOperation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "entity-system.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023entity-system.proto\022\024inexor.entity_sys"
      "tem\"u\n\023EntityAttributeType\022\032\n\022ent_attr_t"
      "ype_name\030\001 \001(\t\022B\n\022ent_attr_data_type\030\002 \001"
      "(\0162&.inexor.entity_system.ENTSYS_DATA_TY"
      "PE\"#\n\nEntityType\022\025\n\rent_type_name\030\001 \001(\t\""
      "\212\001\n\033EntityRelationAttributeType\022\036\n\026ent_r"
      "el_attr_type_name\030\001 \001(\t\022K\n\033ent_rel_attr_"
      "type_data_type\030\002 \001(\0162&.inexor.entity_sys"
      "tem.ENTSYS_DATA_TYPE\"\241\001\n\022EntityRelationT"
      "ype\022\025\n\rrel_type_name\030\001 \001(\t\0229\n\017ent_type_s"
      "ource\030\002 \001(\0132 .inexor.entity_system.Entit"
      "yType\0229\n\017ent_type_target\030\003 \001(\0132 .inexor."
      "entity_system.EntityType\"F\n\017EntityOperat"
      "ion\0223\n\006result\030\001 \001(\0162#.inexor.entity_syst"
      "em.ENTSYS_RESULT*5\n\rENTSYS_RESULT\022\020\n\014ENT"
      "SYS_ERROR\020\000\022\022\n\016ENTSYS_SUCCESS\020\001*~\n\022ENTSY"
      "S_ERROR_LEVEL\022\025\n\021ENTSYS_LEVEL_INFO\020\000\022\030\n\024"
      "ENTSYS_LEVEL_WARNING\020\001\022\026\n\022ENTSYS_LEVEL_E"
      "RROR\020\002\022\037\n\033ENTSYS_LEVEL_CRITICAL_ERROR\020\003*"
      "O\n\035ENTSYS_DATA_VALIDATION_RESULT\022\027\n\023ENTS"
      "YS_DATA_INVALID\020\000\022\025\n\021ENTSYS_DATA_VALID\020\001"
      "*\333\001\n\020ENTSYS_DATA_TYPE\022\036\n\032ENTSYS_DATA_TYP"
      "E_UNDEFINED\020\000\022\030\n\024ENTSYS_DATA_TYPE_INT\020\001\022"
      "\034\n\030ENTSYS_DATA_TYPE_BIG_INT\020\002\022\032\n\026ENTSYS_"
      "DATA_TYPE_FLOAT\020\003\022\033\n\027ENTSYS_DATA_TYPE_ST"
      "RING\020\004\022\033\n\027ENTSYS_DATA_TYPE_DOUBLE\020\005\022\031\n\025E"
      "NTSYS_DATA_TYPE_BOOL\020\0062\376\006\n\014EntitySystem\022"
      "[\n\020CreateEntityType\022 .inexor.entity_syst"
      "em.EntityType\032%.inexor.entity_system.Ent"
      "ityOperation\022[\n\020DeleteEntityType\022 .inexo"
      "r.entity_system.EntityType\032%.inexor.enti"
      "ty_system.EntityOperation\022m\n\031CreateEntit"
      "yAttributeType\022).inexor.entity_system.En"
      "tityAttributeType\032%.inexor.entity_system"
      ".EntityOperation\022m\n\031DeleteEntityAttribut"
      "eType\022).inexor.entity_system.EntityAttri"
      "buteType\032%.inexor.entity_system.EntityOp"
      "eration\022}\n!CreateEntityRelationAttribute"
      "Type\0221.inexor.entity_system.EntityRelati"
      "onAttributeType\032%.inexor.entity_system.E"
      "ntityOperation\022}\n!DeleteEntityRelationAt"
      "tributeType\0221.inexor.entity_system.Entit"
      "yRelationAttributeType\032%.inexor.entity_s"
      "ystem.EntityOperation\022k\n\030CreateEntityRel"
      "ationType\022(.inexor.entity_system.EntityR"
      "elationType\032%.inexor.entity_system.Entit"
      "yOperation\022k\n\030DeleteEntityRelationType\022("
      ".inexor.entity_system.EntityRelationType"
      "\032%.inexor.entity_system.EntityOperationb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "entity-system.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_entity_2dsystem_2eproto
namespace inexor {
namespace entity_system {
const ::google::protobuf::EnumDescriptor* ENTSYS_RESULT_descriptor() {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_entity_2dsystem_2eproto::file_level_enum_descriptors[0];
}
bool ENTSYS_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENTSYS_ERROR_LEVEL_descriptor() {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_entity_2dsystem_2eproto::file_level_enum_descriptors[1];
}
bool ENTSYS_ERROR_LEVEL_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENTSYS_DATA_VALIDATION_RESULT_descriptor() {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_entity_2dsystem_2eproto::file_level_enum_descriptors[2];
}
bool ENTSYS_DATA_VALIDATION_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENTSYS_DATA_TYPE_descriptor() {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_entity_2dsystem_2eproto::file_level_enum_descriptors[3];
}
bool ENTSYS_DATA_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void EntityAttributeType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAttributeType::kEntAttrTypeNameFieldNumber;
const int EntityAttributeType::kEntAttrDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAttributeType::EntityAttributeType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityAttributeType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inexor.entity_system.EntityAttributeType)
}
EntityAttributeType::EntityAttributeType(const EntityAttributeType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ent_attr_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ent_attr_type_name().size() > 0) {
    ent_attr_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_attr_type_name_);
  }
  ent_attr_data_type_ = from.ent_attr_data_type_;
  // @@protoc_insertion_point(copy_constructor:inexor.entity_system.EntityAttributeType)
}

void EntityAttributeType::SharedCtor() {
  ent_attr_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ent_attr_data_type_ = 0;
}

EntityAttributeType::~EntityAttributeType() {
  // @@protoc_insertion_point(destructor:inexor.entity_system.EntityAttributeType)
  SharedDtor();
}

void EntityAttributeType::SharedDtor() {
  ent_attr_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityAttributeType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityAttributeType::descriptor() {
  ::protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityAttributeType& EntityAttributeType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_entity_2dsystem_2eproto::scc_info_EntityAttributeType.base);
  return *internal_default_instance();
}


void EntityAttributeType::Clear() {
// @@protoc_insertion_point(message_clear_start:inexor.entity_system.EntityAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ent_attr_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ent_attr_data_type_ = 0;
  _internal_metadata_.Clear();
}

bool EntityAttributeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inexor.entity_system.EntityAttributeType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ent_attr_type_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ent_attr_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ent_attr_type_name().data(), static_cast<int>(this->ent_attr_type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inexor.entity_system.EntityAttributeType.ent_attr_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inexor.entity_system.ENTSYS_DATA_TYPE ent_attr_data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ent_attr_data_type(static_cast< ::inexor::entity_system::ENTSYS_DATA_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inexor.entity_system.EntityAttributeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inexor.entity_system.EntityAttributeType)
  return false;
#undef DO_
}

void EntityAttributeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inexor.entity_system.EntityAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_attr_type_name = 1;
  if (this->ent_attr_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_attr_type_name().data(), static_cast<int>(this->ent_attr_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityAttributeType.ent_attr_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ent_attr_type_name(), output);
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_attr_data_type = 2;
  if (this->ent_attr_data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ent_attr_data_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inexor.entity_system.EntityAttributeType)
}

::google::protobuf::uint8* EntityAttributeType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inexor.entity_system.EntityAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_attr_type_name = 1;
  if (this->ent_attr_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_attr_type_name().data(), static_cast<int>(this->ent_attr_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityAttributeType.ent_attr_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ent_attr_type_name(), target);
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_attr_data_type = 2;
  if (this->ent_attr_data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ent_attr_data_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inexor.entity_system.EntityAttributeType)
  return target;
}

size_t EntityAttributeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inexor.entity_system.EntityAttributeType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ent_attr_type_name = 1;
  if (this->ent_attr_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ent_attr_type_name());
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_attr_data_type = 2;
  if (this->ent_attr_data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ent_attr_data_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityAttributeType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inexor.entity_system.EntityAttributeType)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityAttributeType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAttributeType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inexor.entity_system.EntityAttributeType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inexor.entity_system.EntityAttributeType)
    MergeFrom(*source);
  }
}

void EntityAttributeType::MergeFrom(const EntityAttributeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inexor.entity_system.EntityAttributeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ent_attr_type_name().size() > 0) {

    ent_attr_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_attr_type_name_);
  }
  if (from.ent_attr_data_type() != 0) {
    set_ent_attr_data_type(from.ent_attr_data_type());
  }
}

void EntityAttributeType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inexor.entity_system.EntityAttributeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAttributeType::CopyFrom(const EntityAttributeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inexor.entity_system.EntityAttributeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityAttributeType::IsInitialized() const {
  return true;
}

void EntityAttributeType::Swap(EntityAttributeType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAttributeType::InternalSwap(EntityAttributeType* other) {
  using std::swap;
  ent_attr_type_name_.Swap(&other->ent_attr_type_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ent_attr_data_type_, other->ent_attr_data_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityAttributeType::GetMetadata() const {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityType::kEntTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityType::EntityType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inexor.entity_system.EntityType)
}
EntityType::EntityType(const EntityType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ent_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ent_type_name().size() > 0) {
    ent_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_type_name_);
  }
  // @@protoc_insertion_point(copy_constructor:inexor.entity_system.EntityType)
}

void EntityType::SharedCtor() {
  ent_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EntityType::~EntityType() {
  // @@protoc_insertion_point(destructor:inexor.entity_system.EntityType)
  SharedDtor();
}

void EntityType::SharedDtor() {
  ent_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityType::descriptor() {
  ::protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityType& EntityType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_entity_2dsystem_2eproto::scc_info_EntityType.base);
  return *internal_default_instance();
}


void EntityType::Clear() {
// @@protoc_insertion_point(message_clear_start:inexor.entity_system.EntityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ent_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EntityType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inexor.entity_system.EntityType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ent_type_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ent_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ent_type_name().data(), static_cast<int>(this->ent_type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inexor.entity_system.EntityType.ent_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inexor.entity_system.EntityType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inexor.entity_system.EntityType)
  return false;
#undef DO_
}

void EntityType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inexor.entity_system.EntityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_type_name = 1;
  if (this->ent_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_type_name().data(), static_cast<int>(this->ent_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityType.ent_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ent_type_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inexor.entity_system.EntityType)
}

::google::protobuf::uint8* EntityType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inexor.entity_system.EntityType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_type_name = 1;
  if (this->ent_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_type_name().data(), static_cast<int>(this->ent_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityType.ent_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ent_type_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inexor.entity_system.EntityType)
  return target;
}

size_t EntityType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inexor.entity_system.EntityType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ent_type_name = 1;
  if (this->ent_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ent_type_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inexor.entity_system.EntityType)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inexor.entity_system.EntityType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inexor.entity_system.EntityType)
    MergeFrom(*source);
  }
}

void EntityType::MergeFrom(const EntityType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inexor.entity_system.EntityType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ent_type_name().size() > 0) {

    ent_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_type_name_);
  }
}

void EntityType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inexor.entity_system.EntityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityType::CopyFrom(const EntityType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inexor.entity_system.EntityType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityType::IsInitialized() const {
  return true;
}

void EntityType::Swap(EntityType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityType::InternalSwap(EntityType* other) {
  using std::swap;
  ent_type_name_.Swap(&other->ent_type_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityType::GetMetadata() const {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityRelationAttributeType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityRelationAttributeType::kEntRelAttrTypeNameFieldNumber;
const int EntityRelationAttributeType::kEntRelAttrTypeDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityRelationAttributeType::EntityRelationAttributeType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityRelationAttributeType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inexor.entity_system.EntityRelationAttributeType)
}
EntityRelationAttributeType::EntityRelationAttributeType(const EntityRelationAttributeType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ent_rel_attr_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ent_rel_attr_type_name().size() > 0) {
    ent_rel_attr_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_rel_attr_type_name_);
  }
  ent_rel_attr_type_data_type_ = from.ent_rel_attr_type_data_type_;
  // @@protoc_insertion_point(copy_constructor:inexor.entity_system.EntityRelationAttributeType)
}

void EntityRelationAttributeType::SharedCtor() {
  ent_rel_attr_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ent_rel_attr_type_data_type_ = 0;
}

EntityRelationAttributeType::~EntityRelationAttributeType() {
  // @@protoc_insertion_point(destructor:inexor.entity_system.EntityRelationAttributeType)
  SharedDtor();
}

void EntityRelationAttributeType::SharedDtor() {
  ent_rel_attr_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityRelationAttributeType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityRelationAttributeType::descriptor() {
  ::protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityRelationAttributeType& EntityRelationAttributeType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_entity_2dsystem_2eproto::scc_info_EntityRelationAttributeType.base);
  return *internal_default_instance();
}


void EntityRelationAttributeType::Clear() {
// @@protoc_insertion_point(message_clear_start:inexor.entity_system.EntityRelationAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ent_rel_attr_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ent_rel_attr_type_data_type_ = 0;
  _internal_metadata_.Clear();
}

bool EntityRelationAttributeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inexor.entity_system.EntityRelationAttributeType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ent_rel_attr_type_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ent_rel_attr_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ent_rel_attr_type_name().data(), static_cast<int>(this->ent_rel_attr_type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inexor.entity_system.EntityRelationAttributeType.ent_rel_attr_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inexor.entity_system.ENTSYS_DATA_TYPE ent_rel_attr_type_data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ent_rel_attr_type_data_type(static_cast< ::inexor::entity_system::ENTSYS_DATA_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inexor.entity_system.EntityRelationAttributeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inexor.entity_system.EntityRelationAttributeType)
  return false;
#undef DO_
}

void EntityRelationAttributeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inexor.entity_system.EntityRelationAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_rel_attr_type_name = 1;
  if (this->ent_rel_attr_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_rel_attr_type_name().data(), static_cast<int>(this->ent_rel_attr_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityRelationAttributeType.ent_rel_attr_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ent_rel_attr_type_name(), output);
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_rel_attr_type_data_type = 2;
  if (this->ent_rel_attr_type_data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ent_rel_attr_type_data_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inexor.entity_system.EntityRelationAttributeType)
}

::google::protobuf::uint8* EntityRelationAttributeType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inexor.entity_system.EntityRelationAttributeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ent_rel_attr_type_name = 1;
  if (this->ent_rel_attr_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ent_rel_attr_type_name().data(), static_cast<int>(this->ent_rel_attr_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityRelationAttributeType.ent_rel_attr_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ent_rel_attr_type_name(), target);
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_rel_attr_type_data_type = 2;
  if (this->ent_rel_attr_type_data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ent_rel_attr_type_data_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inexor.entity_system.EntityRelationAttributeType)
  return target;
}

size_t EntityRelationAttributeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inexor.entity_system.EntityRelationAttributeType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ent_rel_attr_type_name = 1;
  if (this->ent_rel_attr_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ent_rel_attr_type_name());
  }

  // .inexor.entity_system.ENTSYS_DATA_TYPE ent_rel_attr_type_data_type = 2;
  if (this->ent_rel_attr_type_data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ent_rel_attr_type_data_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityRelationAttributeType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inexor.entity_system.EntityRelationAttributeType)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRelationAttributeType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityRelationAttributeType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inexor.entity_system.EntityRelationAttributeType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inexor.entity_system.EntityRelationAttributeType)
    MergeFrom(*source);
  }
}

void EntityRelationAttributeType::MergeFrom(const EntityRelationAttributeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inexor.entity_system.EntityRelationAttributeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ent_rel_attr_type_name().size() > 0) {

    ent_rel_attr_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ent_rel_attr_type_name_);
  }
  if (from.ent_rel_attr_type_data_type() != 0) {
    set_ent_rel_attr_type_data_type(from.ent_rel_attr_type_data_type());
  }
}

void EntityRelationAttributeType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inexor.entity_system.EntityRelationAttributeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRelationAttributeType::CopyFrom(const EntityRelationAttributeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inexor.entity_system.EntityRelationAttributeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRelationAttributeType::IsInitialized() const {
  return true;
}

void EntityRelationAttributeType::Swap(EntityRelationAttributeType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityRelationAttributeType::InternalSwap(EntityRelationAttributeType* other) {
  using std::swap;
  ent_rel_attr_type_name_.Swap(&other->ent_rel_attr_type_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ent_rel_attr_type_data_type_, other->ent_rel_attr_type_data_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityRelationAttributeType::GetMetadata() const {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityRelationType::InitAsDefaultInstance() {
  ::inexor::entity_system::_EntityRelationType_default_instance_._instance.get_mutable()->ent_type_source_ = const_cast< ::inexor::entity_system::EntityType*>(
      ::inexor::entity_system::EntityType::internal_default_instance());
  ::inexor::entity_system::_EntityRelationType_default_instance_._instance.get_mutable()->ent_type_target_ = const_cast< ::inexor::entity_system::EntityType*>(
      ::inexor::entity_system::EntityType::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityRelationType::kRelTypeNameFieldNumber;
const int EntityRelationType::kEntTypeSourceFieldNumber;
const int EntityRelationType::kEntTypeTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityRelationType::EntityRelationType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityRelationType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inexor.entity_system.EntityRelationType)
}
EntityRelationType::EntityRelationType(const EntityRelationType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rel_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rel_type_name().size() > 0) {
    rel_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rel_type_name_);
  }
  if (from.has_ent_type_source()) {
    ent_type_source_ = new ::inexor::entity_system::EntityType(*from.ent_type_source_);
  } else {
    ent_type_source_ = NULL;
  }
  if (from.has_ent_type_target()) {
    ent_type_target_ = new ::inexor::entity_system::EntityType(*from.ent_type_target_);
  } else {
    ent_type_target_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:inexor.entity_system.EntityRelationType)
}

void EntityRelationType::SharedCtor() {
  rel_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ent_type_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ent_type_target_) -
      reinterpret_cast<char*>(&ent_type_source_)) + sizeof(ent_type_target_));
}

EntityRelationType::~EntityRelationType() {
  // @@protoc_insertion_point(destructor:inexor.entity_system.EntityRelationType)
  SharedDtor();
}

void EntityRelationType::SharedDtor() {
  rel_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ent_type_source_;
  if (this != internal_default_instance()) delete ent_type_target_;
}

void EntityRelationType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityRelationType::descriptor() {
  ::protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityRelationType& EntityRelationType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_entity_2dsystem_2eproto::scc_info_EntityRelationType.base);
  return *internal_default_instance();
}


void EntityRelationType::Clear() {
// @@protoc_insertion_point(message_clear_start:inexor.entity_system.EntityRelationType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rel_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ent_type_source_ != NULL) {
    delete ent_type_source_;
  }
  ent_type_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && ent_type_target_ != NULL) {
    delete ent_type_target_;
  }
  ent_type_target_ = NULL;
  _internal_metadata_.Clear();
}

bool EntityRelationType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inexor.entity_system.EntityRelationType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rel_type_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rel_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rel_type_name().data(), static_cast<int>(this->rel_type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inexor.entity_system.EntityRelationType.rel_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inexor.entity_system.EntityType ent_type_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ent_type_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inexor.entity_system.EntityType ent_type_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ent_type_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inexor.entity_system.EntityRelationType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inexor.entity_system.EntityRelationType)
  return false;
#undef DO_
}

void EntityRelationType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inexor.entity_system.EntityRelationType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rel_type_name = 1;
  if (this->rel_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rel_type_name().data(), static_cast<int>(this->rel_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityRelationType.rel_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rel_type_name(), output);
  }

  // .inexor.entity_system.EntityType ent_type_source = 2;
  if (this->has_ent_type_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ent_type_source(), output);
  }

  // .inexor.entity_system.EntityType ent_type_target = 3;
  if (this->has_ent_type_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ent_type_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inexor.entity_system.EntityRelationType)
}

::google::protobuf::uint8* EntityRelationType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inexor.entity_system.EntityRelationType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rel_type_name = 1;
  if (this->rel_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rel_type_name().data(), static_cast<int>(this->rel_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inexor.entity_system.EntityRelationType.rel_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rel_type_name(), target);
  }

  // .inexor.entity_system.EntityType ent_type_source = 2;
  if (this->has_ent_type_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ent_type_source(), deterministic, target);
  }

  // .inexor.entity_system.EntityType ent_type_target = 3;
  if (this->has_ent_type_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ent_type_target(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inexor.entity_system.EntityRelationType)
  return target;
}

size_t EntityRelationType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inexor.entity_system.EntityRelationType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string rel_type_name = 1;
  if (this->rel_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rel_type_name());
  }

  // .inexor.entity_system.EntityType ent_type_source = 2;
  if (this->has_ent_type_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ent_type_source_);
  }

  // .inexor.entity_system.EntityType ent_type_target = 3;
  if (this->has_ent_type_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ent_type_target_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityRelationType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inexor.entity_system.EntityRelationType)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRelationType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityRelationType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inexor.entity_system.EntityRelationType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inexor.entity_system.EntityRelationType)
    MergeFrom(*source);
  }
}

void EntityRelationType::MergeFrom(const EntityRelationType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inexor.entity_system.EntityRelationType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rel_type_name().size() > 0) {

    rel_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rel_type_name_);
  }
  if (from.has_ent_type_source()) {
    mutable_ent_type_source()->::inexor::entity_system::EntityType::MergeFrom(from.ent_type_source());
  }
  if (from.has_ent_type_target()) {
    mutable_ent_type_target()->::inexor::entity_system::EntityType::MergeFrom(from.ent_type_target());
  }
}

void EntityRelationType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inexor.entity_system.EntityRelationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRelationType::CopyFrom(const EntityRelationType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inexor.entity_system.EntityRelationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRelationType::IsInitialized() const {
  return true;
}

void EntityRelationType::Swap(EntityRelationType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityRelationType::InternalSwap(EntityRelationType* other) {
  using std::swap;
  rel_type_name_.Swap(&other->rel_type_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ent_type_source_, other->ent_type_source_);
  swap(ent_type_target_, other->ent_type_target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityRelationType::GetMetadata() const {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityOperation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityOperation::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityOperation::EntityOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_entity_2dsystem_2eproto::scc_info_EntityOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inexor.entity_system.EntityOperation)
}
EntityOperation::EntityOperation(const EntityOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:inexor.entity_system.EntityOperation)
}

void EntityOperation::SharedCtor() {
  result_ = 0;
}

EntityOperation::~EntityOperation() {
  // @@protoc_insertion_point(destructor:inexor.entity_system.EntityOperation)
  SharedDtor();
}

void EntityOperation::SharedDtor() {
}

void EntityOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityOperation::descriptor() {
  ::protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityOperation& EntityOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_entity_2dsystem_2eproto::scc_info_EntityOperation.base);
  return *internal_default_instance();
}


void EntityOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:inexor.entity_system.EntityOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

bool EntityOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inexor.entity_system.EntityOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .inexor.entity_system.ENTSYS_RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::inexor::entity_system::ENTSYS_RESULT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inexor.entity_system.EntityOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inexor.entity_system.EntityOperation)
  return false;
#undef DO_
}

void EntityOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inexor.entity_system.EntityOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .inexor.entity_system.ENTSYS_RESULT result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inexor.entity_system.EntityOperation)
}

::google::protobuf::uint8* EntityOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inexor.entity_system.EntityOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .inexor.entity_system.ENTSYS_RESULT result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inexor.entity_system.EntityOperation)
  return target;
}

size_t EntityOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inexor.entity_system.EntityOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .inexor.entity_system.ENTSYS_RESULT result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inexor.entity_system.EntityOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inexor.entity_system.EntityOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inexor.entity_system.EntityOperation)
    MergeFrom(*source);
  }
}

void EntityOperation::MergeFrom(const EntityOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inexor.entity_system.EntityOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EntityOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inexor.entity_system.EntityOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityOperation::CopyFrom(const EntityOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inexor.entity_system.EntityOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityOperation::IsInitialized() const {
  return true;
}

void EntityOperation::Swap(EntityOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityOperation::InternalSwap(EntityOperation* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityOperation::GetMetadata() const {
  protobuf_entity_2dsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_entity_2dsystem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace entity_system
}  // namespace inexor
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inexor::entity_system::EntityAttributeType* Arena::CreateMaybeMessage< ::inexor::entity_system::EntityAttributeType >(Arena* arena) {
  return Arena::CreateInternal< ::inexor::entity_system::EntityAttributeType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inexor::entity_system::EntityType* Arena::CreateMaybeMessage< ::inexor::entity_system::EntityType >(Arena* arena) {
  return Arena::CreateInternal< ::inexor::entity_system::EntityType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inexor::entity_system::EntityRelationAttributeType* Arena::CreateMaybeMessage< ::inexor::entity_system::EntityRelationAttributeType >(Arena* arena) {
  return Arena::CreateInternal< ::inexor::entity_system::EntityRelationAttributeType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inexor::entity_system::EntityRelationType* Arena::CreateMaybeMessage< ::inexor::entity_system::EntityRelationType >(Arena* arena) {
  return Arena::CreateInternal< ::inexor::entity_system::EntityRelationType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inexor::entity_system::EntityOperation* Arena::CreateMaybeMessage< ::inexor::entity_system::EntityOperation >(Arena* arena) {
  return Arena::CreateInternal< ::inexor::entity_system::EntityOperation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
