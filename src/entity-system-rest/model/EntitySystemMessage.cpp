/**
 * Inexor Entity System
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.0.0
 * Contact: info@inexor.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "EntitySystemMessage.hpp"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace inexor {
namespace entity_system {
namespace rest {
namespace model {

EntitySystemMessage::EntitySystemMessage()
{
    m_Code = 0;
    m_Message = "";
    
}

EntitySystemMessage::~EntitySystemMessage()
{
}

std::string EntitySystemMessage::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("code", m_Code);
	pt.put("message", m_Message);
	write_json(ss, pt, false);
	return ss.str();
}

void EntitySystemMessage::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m_Code = pt.get("code", 0);
	m_Message = pt.get("message", "");
}

int32_t EntitySystemMessage::getCode() const
{
    return m_Code;
}
void EntitySystemMessage::setCode(int32_t value)
{
    m_Code = value;
}
std::string EntitySystemMessage::getMessage() const
{
    return m_Message;
}
void EntitySystemMessage::setMessage(std::string value)
{
    m_Message = value;
}

}
}
}
}

