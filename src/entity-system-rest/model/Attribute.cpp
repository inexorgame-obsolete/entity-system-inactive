/**
 * Inexor Entity System
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.0.0
 * Contact: info@inexor.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "Attribute.hpp"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace inexor {
namespace entity_system {
namespace rest {
namespace model {

Attribute::Attribute()
{
    m_Attribute_uuid = "";
    m_Name = "";
    m_Datatype = "";
    m_Value = "";
    
}

Attribute::~Attribute()
{
}

std::string Attribute::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("attribute_uuid", m_Attribute_uuid);
	pt.put("name", m_Name);
	pt.put("datatype", m_Datatype);
	pt.put("value", m_Value);
	write_json(ss, pt, false);
	return ss.str();
}

void Attribute::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m_Attribute_uuid = pt.get("attribute_uuid", "");
	m_Name = pt.get("name", "");
	m_Datatype = pt.get("datatype", "");
	m_Value = pt.get("value", "");
}

std::string Attribute::getAttributeUuid() const
{
    return m_Attribute_uuid;
}
void Attribute::setAttributeUuid(std::string value)
{
    m_Attribute_uuid = value;
}
std::string Attribute::getName() const
{
    return m_Name;
}
void Attribute::setName(std::string value)
{
    m_Name = value;
}
std::string Attribute::getDatatype() const
{
    return m_Datatype;
}
void Attribute::setDatatype(std::string value)
{
    m_Datatype = value;
}
std::string Attribute::getValue() const
{
    return m_Value;
}
void Attribute::setValue(std::string value)
{
    m_Value = value;
}

}
}
}
}

