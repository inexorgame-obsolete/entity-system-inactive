/**
 * Inexor Entity System
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.0.0
 * Contact: info@inexor.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#pragma once

#include <string>
#include <vector>
#include <memory>

#include "Attribute.hpp"

namespace inexor {
namespace entity_system {
namespace rest {
namespace model {

/// <summary>
/// 
/// </summary>
class  RelationInstance
{
public:
    RelationInstance();
    virtual ~RelationInstance();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// RelationInstance members
    
    /// <summary>
    /// 
    /// </summary>
    std::string getRelationInstanceUuid() const;
    void setRelationInstanceUuid(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getRelationTypeUuid() const;
    void setRelationTypeUuid(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getStartNodeEntityInstanceUuid() const;
    void setStartNodeEntityInstanceUuid(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::string getEndNodeEntityInstanceUuid() const;
    void setEndNodeEntityInstanceUuid(std::string value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Attribute>> getAttributes() const;
    void setAttributes(std::vector<std::shared_ptr<Attribute>> value);

protected:
    std::string m_Relation_instance_uuid;
    std::string m_Relation_type_uuid;
    std::string m_Start_node_entity_instance_uuid;
    std::string m_End_node_entity_instance_uuid;
    std::vector<std::shared_ptr<Attribute>> m_Attributes;
};

}
}
}
}
