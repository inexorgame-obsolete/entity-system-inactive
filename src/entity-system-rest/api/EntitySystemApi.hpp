/**
 * Inexor Entity System
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.0.0
 * Contact: info@inexor.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EntitySystemApi.h
 *
 * 
 */

#ifndef EntitySystemApi_H_
#define EntitySystemApi_H_

#include <memory>
#include <crossguid/guid.hpp>
#include <string>
#include <restbed>

#include "../model/EntitySystem.hpp"
#include "../model/EntitySystemMessage.hpp"
#include "entity-system/EntitySystem.hpp"

using namespace inexor::entity_system::rest::model;
using namespace restbed;

namespace inexor {
namespace entity_system {
namespace rest {
namespace api {

class  EntitySystemApi
{
public:
	EntitySystemApi();
	~EntitySystemApi();
	void createResources(std::shared_ptr<inexor::entity_system::EntitySystem> entity_system, std::shared_ptr<Service> service);
};


/// <summary>
/// Clears the whole entity system
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  EntitySystemApiEntitysystemResource: public restbed::Resource
{
public:
	EntitySystemApiEntitysystemResource();
    virtual ~EntitySystemApiEntitysystemResource();
    void DELETE_method_handler(const std::shared_ptr<restbed::Session> session);
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);
};


}
}
}
}

#endif /* EntitySystemApi_H_ */

