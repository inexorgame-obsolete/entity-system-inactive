syntax = "proto3";
package inexor.entity_system;

enum ENTSYS_ERROR_LEVEL
{
    ENTSYS_LEVEL_INFO = 0;
    ENTSYS_LEVEL_WARNING = 1;
    ENTSYS_LEVEL_ERROR = 2;
    ENTSYS_LEVEL_CRITICAL_ERROR = 3;
}

enum ENTSYS_DATA_VALIDATION_RESULT
{
    ENTSYS_DATA_INVALID = 0;
    ENTSYS_DATA_VALID = 1;
    // TODO: Add new data validation result codes here.
}

enum ENTSYS_DATA_TYPE {
    ENTSYS_DATA_TYPE_UNDEFINED = 0;
    ENTSYS_DATA_TYPE_INT = 1;
    ENTSYS_DATA_TYPE_BIG_INT = 2;
    ENTSYS_DATA_TYPE_FLOAT = 3;
    ENTSYS_DATA_TYPE_STRING = 4;
    ENTSYS_DATA_TYPE_DOUBLE = 5;
    ENTSYS_DATA_TYPE_BOOL = 6;
}

message EntityAttributeType {
    string ent_attr_type_name = 1;
    ENTSYS_DATA_TYPE ent_attr_data_type = 2;
}

message EntityType {
    string ent_type_name = 1;
}

message EntityRelationAttributeType {
    string ent_rel_attr_type_name = 1;
    ENTSYS_DATA_TYPE ent_rel_attr_type_data_type = 2;
}

message EntityRelationType {
    string rel_type_name = 1;
    EntityType ent_type_source = 2;
    EntityType ent_type_target = 3;
}

message EntityOperation {
    ENTSYS_RESULT result = 1;
}

service EntitySystem {
    // Create an entity type
    rpc CreateEntityType (EntityType) returns (EntityOperation);

    // Delete entity type
    rpc DeleteEntityType (EntityType) returns (EntityOperation);

    // Create an entity attribute type
    rpc CreateEntityAttributeType (EntityAttributeType) returns (EntityOperation);

    // Delete entity attribute type
    rpc DeleteEntityAttributeType (EntityAttributeType) returns (EntityOperation);

    // Create an entity relation attribution type
    rpc CreateEntityRelationAttributeType (EntityRelationAttributeType) returns (EntityOperation);

    // Delete an entity relation attribute type
    rpc DeleteEntityRelationAttributeType (EntityRelationAttributeType) returns (EntityOperation);

    // Create an entity relation type
    rpc CreateEntityRelationType (EntityRelationType) returns (EntityOperation);

    // Delete an entity relation type
    rpc DeleteEntityRelationType (EntityRelationType) returns (EntityOperation);
}
